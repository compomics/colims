<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- import spring config file from colims-model -->
    <import resource="classpath:colims-model-context.xml"/>

    <!-- Property placeholder -->
    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="location" value="config/colims-repository.properties"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>

    <!-- transaction beans -->
    <!-- keep this the connection pool in comment in case it's ever needed -->
    <!--<bean id="colimsDataSource" class="org.apache.commons.dbcp2.BasicDataSource">-->
    <!--<property name="driverClassName" value="${db.driver}"/>-->
    <!--<property name="url" value="${db.url}"/>-->
    <!--<property name="username" value="${db.username}"/>-->
    <!--<property name="password" value="${db.password}"/>-->
    <!--<property name="initialSize" value="${db.initial_pool_size}"/>-->
    <!--<property name="maxTotal" value="${db.max_pool_size}"/>-->
    <!--<property name="validationQuery" value="SELECT 1"/>-->
    <!--<property name="timeBetweenEvictionRunsMillis" value="1000"/>-->
    <!--<property name="minEvictableIdleTimeMillis" value="2000"/>-->
    <!--<property name="testWhileIdle" value="true"/>-->
    <!--<property name="testOnBorrow" value="true"/>-->
    <!--<property name="testOnCreate" value="true"/>-->
    <!--</bean>-->

    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="poolName" value="springHikariCP"/>
        <property name="dataSourceClassName" value="org.mariadb.jdbc.MariaDbDataSource"/>
        <property name="maximumPoolSize" value="3"/>
        <!--<property name="idleTimeout" value="600000"/>-->
        <!--<property name="maxLifetime" value="1800000"/>-->
        <property name="dataSourceProperties">
            <props>
                <prop key="url">${db.url}</prop>
                <prop key="user">${db.username}</prop>
                <prop key="password">${db.password}</prop>
            </props>
        </property>
    </bean>

    <bean id="colimsDataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <constructor-arg ref="hikariConfig"/>
    </bean>

    <!--<bean id="colimsDataSource"-->
    <!--class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
    <!--<property name="driverClassName" value="${db.driver}"/>-->
    <!--<property name="url" value="${db.url}"/>-->
    <!--<property name="username" value="${db.username}"/>-->
    <!--<property name="password" value="${db.password}"/>-->
    <!--</bean>-->

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="colimsPersistenceUnit"/>
        <property name="dataSource" ref="colimsDataSource"/>
        <property name="packagesToScan" value="com.compomics.colims.model"/>
        <property name="mappingResources" value="Queries.hbm.xml"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${db.dialect}</prop>
                <prop key="hibernate.connection.autocommit">${db.autocommit}</prop>
                <prop key="hibernate.show_sql">${db.show_sql}</prop>
                <prop key="hibernate.format_sql">true</prop>
                <!-- this is required for postgresql -->
                <prop key="hibernate.default_schema">${db.default_schema}</prop>
                <!-- Uncommment only if the db schema needs to be created!! This will drop the schema!! -->
                <!--<prop key="hibernate.hbm2ddl.auto">${db.hbm2ddl.auto}</prop>-->
                <prop key="hibernate.generate_statistics">false</prop>
                <!--                <prop key="hibernate.search.default.directory_provider">filesystem</prop>
                                <prop key="hibernate.search.default.indexBase">${hibernate.search.index.directory}</prop>                                      -->
                <prop key="hibernate.cache.use_structured_entries">true</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.provider_class">org.ehcache.jsr107.EhcacheCachingProvider</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.jcache.JCacheRegionFactory</prop>
                <!--<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>-->
                <!--<prop key="hibernate.cache.region.factory_class">-->
                    <!--org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory-->
                <!--</prop>-->
                <prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- repository beans -->
    <context:component-scan base-package="com.compomics.colims.repository">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>

    <!-- component beans -->
    <context:component-scan base-package="com.compomics.colims.repository">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Component"/>
    </context:component-scan>

</beans>
