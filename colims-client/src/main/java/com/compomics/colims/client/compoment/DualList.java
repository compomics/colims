package com.compomics.colims.client.compoment;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Collections;
import java.util.List;
import org.jdesktop.observablecollections.ObservableList;

/**
 *
 * @author niels
 */
public class DualList<T extends Comparable> extends javax.swing.JPanel {

    //model
    private ObservableList<T> availableItemBindingList;
    private ObservableList<T> addedItemBindingList;

    /**
     * Creates new form DualList
     */
    public DualList() {
        initComponents();        
    }

    private void init() {


        //add action listeners
        addItemButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
//                List selectedValues = availableItemList.getSelectedValuesList();
//
//                for (Object selectedObject : selectedValues) {
//                    T selectedItem = (T) selectedObject;
//                    addedItemBindingList.add(selectedItem);
//                    Collections.sort(addedItemBindingList);
//                    availableItemBindingList.remove(selectedItem);
//                    selectedModification.getAffectedAminoAcids().add(aminoAcid);
//
//                    //enable remove button if there's more then one affected amino acid
//                    changeRemoveAminoAcidButtonState(selectedModification);
//
//                    modificationsConfigDialog.getModifcationsTable().updateUI();
//                }
            }
        });

        removeItemButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
//                    Object[] selectedValues = modificationsConfigDialog.getAffectedAminoAcidsList().getSelectedValues();
//
//                    Modification selectedModification = modificationsBindingList.get(modificationsConfigDialog.getModifcationsTable().getSelectedRow());
//
//                    for (Object o : selectedValues) {
//                        AminoAcid aminoAcid = (AminoAcid) o;
//                        aminoAcidsBindingList.add(aminoAcid);
//                        affectedAminoAcidsBindingList.remove(aminoAcid);
//                        Collections.sort(aminoAcidsBindingList);
//                        selectedModification.getAffectedAminoAcids().remove(aminoAcid);
//
//                        //disable remove button if there's only one affected amino acid
//                        changeRemoveAminoAcidButtonState(selectedModification);
//
//                        modificationsConfigDialog.getModifcationsTable().updateUI();
//                    }
            }
        });
    }
    
    /**
     * Changes the state of the removeAminoAcidButton (enable or disabled)
     * depending on the size of the affected amino acids of the selected
     * modification
     *
     * @param selectedModification the selected modification
     */
    private void changeRemoveAminoAcidButtonState() {
//        if (selectedModification.getAffectedAminoAcids().size() == 1) {
//            modificationsConfigDialog.getRemoveAminoAcidButton().setEnabled(Boolean.FALSE);
//        } else {
//            modificationsConfigDialog.getRemoveAminoAcidButton().setEnabled(true);
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        availableScrollPane = new javax.swing.JScrollPane();
        availableItemList = new javax.swing.JList();
        addedScrollPane = new javax.swing.JScrollPane();
        addedItemList = new javax.swing.JList();
        buttonParentPanel = new javax.swing.JPanel();
        buttonPanel = new javax.swing.JPanel();
        addItemButton = new javax.swing.JButton();
        removeItemButton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        availableScrollPane.setViewportView(availableItemList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(availableScrollPane, gridBagConstraints);

        addedScrollPane.setViewportView(addedItemList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(addedScrollPane, gridBagConstraints);

        buttonParentPanel.setLayout(new java.awt.GridBagLayout());

        addItemButton.setText(">>");
        addItemButton.setMaximumSize(new java.awt.Dimension(80, 25));
        addItemButton.setMinimumSize(new java.awt.Dimension(80, 25));
        addItemButton.setPreferredSize(new java.awt.Dimension(80, 25));

        removeItemButton.setText("<<");
        removeItemButton.setMaximumSize(new java.awt.Dimension(80, 25));
        removeItemButton.setMinimumSize(new java.awt.Dimension(80, 25));
        removeItemButton.setPreferredSize(new java.awt.Dimension(80, 25));

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(removeItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        buttonParentPanel.add(buttonPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        add(buttonParentPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addItemButton;
    private javax.swing.JList addedItemList;
    private javax.swing.JScrollPane addedScrollPane;
    private javax.swing.JList availableItemList;
    private javax.swing.JScrollPane availableScrollPane;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JPanel buttonParentPanel;
    private javax.swing.JButton removeItemButton;
    // End of variables declaration//GEN-END:variables
}
