/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.compomics.colims.client.view;

import com.compomics.colims.client.controller.ProteinOverviewController;

import javax.swing.*;

/**
 *
 * @author Iain
 */
public class ProteinOverviewPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProteinOverviewPanel
     */
    public ProteinOverviewPanel(final JFrame mainFrame, final ProteinOverviewController proteinOverviewController) {
        this.mainFrame = mainFrame;
        this.proteinOverviewController = proteinOverviewController;

        initComponents();
        
        proteinsScrollPane.getViewport().setOpaque(false);
        peptidesScrollPane.getViewport().setOpaque(false);
        psmScrollPane.getViewport().setOpaque(false);
    }

    public JScrollPane getProteinsScrollPane() { return proteinsScrollPane; }
    public JTable getProteinsTable() { return proteinsTable; }
    public JTable getPeptidesTable() { return peptidesTable; }
    public JTable getPsmTable() { return psmTable; }
    public JTree getProjectTree() { return projectTree; }
    public JLabel getPageLabelProteins() { return pageLabelProteins; }
    public JButton getFirstPageProteins() { return firstPageProteins; }
    public JButton getLastPageProteins() { return lastPageProteins; }
    public JButton getNextPageProteins() { return nextPageProteins; }
    public JButton getPrevPageProteins() { return prevPageProteins; }
    public JTextField getFilterProteins() { return filterProteins; }
    public JButton getExportProteins() { return exportProteins; }
    public JButton getExportPeptides() { return exportPeptides; }
    public JButton getExportPSMs() { return exportPSMs; }
    public JFileChooser getExportFileChooser() { return exportFileChooser; }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        exportFileChooser = new javax.swing.JFileChooser();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        proteinsPanel = new javax.swing.JPanel();
        proteinsScrollPane = new javax.swing.JScrollPane();
        proteinsTable = new javax.swing.JTable();
        filterProteins = new javax.swing.JTextField();
        firstPageProteins = new javax.swing.JButton();
        prevPageProteins = new javax.swing.JButton();
        nextPageProteins = new javax.swing.JButton();
        lastPageProteins = new javax.swing.JButton();
        pageLabelProteins = new javax.swing.JLabel();
        exportProteins = new javax.swing.JButton();
        peptidesPanel = new javax.swing.JPanel();
        peptidesScrollPane = new javax.swing.JScrollPane();
        peptidesTable = new javax.swing.JTable();
        exportPeptides = new javax.swing.JButton();
        psmPanel = new javax.swing.JPanel();
        psmScrollPane = new javax.swing.JScrollPane();
        psmTable = new javax.swing.JTable();
        exportPSMs = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        projectTree = new javax.swing.JTree();

        exportFileChooser.setDialogTitle("Save protein data as TSV file");

        setMinimumSize(new java.awt.Dimension(1398, 800));
        setPreferredSize(new java.awt.Dimension(1398, 800));
        setLayout(new javax.swing.OverlayLayout(this));

        jSplitPane1.setDividerLocation(330);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        proteinsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Protein Groups"));
        proteinsPanel.setName(""); // NOI18N

        proteinsScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        proteinsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        proteinsScrollPane.setViewportView(proteinsTable);

        filterProteins.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterProteinsActionPerformed(evt);
            }
        });

        firstPageProteins.setText("<<");
        firstPageProteins.setEnabled(false);

        prevPageProteins.setText("<");
        prevPageProteins.setEnabled(false);

        nextPageProteins.setText(">");

        lastPageProteins.setText(">>");

        exportProteins.setText("Export...");

        javax.swing.GroupLayout proteinsPanelLayout = new javax.swing.GroupLayout(proteinsPanel);
        proteinsPanel.setLayout(proteinsPanelLayout);
        proteinsPanelLayout.setHorizontalGroup(
            proteinsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(proteinsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(proteinsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(proteinsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, proteinsPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(filterProteins, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, proteinsPanelLayout.createSequentialGroup()
                        .addComponent(exportProteins)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pageLabelProteins)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(firstPageProteins)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(prevPageProteins)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextPageProteins)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lastPageProteins)))
                .addContainerGap())
        );
        proteinsPanelLayout.setVerticalGroup(
            proteinsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(proteinsPanelLayout.createSequentialGroup()
                .addComponent(filterProteins, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(proteinsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(proteinsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nextPageProteins)
                    .addComponent(prevPageProteins)
                    .addComponent(firstPageProteins)
                    .addComponent(lastPageProteins)
                    .addComponent(pageLabelProteins)
                    .addComponent(exportProteins))
                .addGap(8, 8, 8))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(proteinsPanel, gridBagConstraints);

        peptidesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Peptides"));

        peptidesScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        peptidesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        peptidesScrollPane.setViewportView(peptidesTable);

        exportPeptides.setText("Export...");

        javax.swing.GroupLayout peptidesPanelLayout = new javax.swing.GroupLayout(peptidesPanel);
        peptidesPanel.setLayout(peptidesPanelLayout);
        peptidesPanelLayout.setHorizontalGroup(
            peptidesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(peptidesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(peptidesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(peptidesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
                    .addGroup(peptidesPanelLayout.createSequentialGroup()
                        .addComponent(exportPeptides)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        peptidesPanelLayout.setVerticalGroup(
            peptidesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, peptidesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(peptidesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exportPeptides)
                .addGap(34, 34, 34))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        jPanel1.add(peptidesPanel, gridBagConstraints);

        psmPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Peptide-Spectrum Matches (double-click to view spectrum)"));

        psmScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        psmTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        psmScrollPane.setViewportView(psmTable);

        exportPSMs.setText("Export...");

        javax.swing.GroupLayout psmPanelLayout = new javax.swing.GroupLayout(psmPanel);
        psmPanel.setLayout(psmPanelLayout);
        psmPanelLayout.setHorizontalGroup(
            psmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(psmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(psmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(psmScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
                    .addGroup(psmPanelLayout.createSequentialGroup()
                        .addComponent(exportPSMs)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        psmPanelLayout.setVerticalGroup(
            psmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(psmPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(psmScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exportPSMs))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        jPanel1.add(psmPanel, gridBagConstraints);

        jSplitPane1.setRightComponent(jPanel1);

        jScrollPane4.setHorizontalScrollBar(null);

        projectTree.setMaximumSize(new java.awt.Dimension(32767, 32767));
        projectTree.setPreferredSize(null);
        jScrollPane4.setViewportView(projectTree);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 798, Short.MAX_VALUE)
        );

        jSplitPane1.setLeftComponent(jPanel2);

        add(jSplitPane1);
    }// </editor-fold>//GEN-END:initComponents

    private void filterProteinsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterProteinsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterProteinsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser exportFileChooser;
    private javax.swing.JButton exportPSMs;
    private javax.swing.JButton exportPeptides;
    private javax.swing.JButton exportProteins;
    private javax.swing.JTextField filterProteins;
    private javax.swing.JButton firstPageProteins;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton lastPageProteins;
    private javax.swing.JButton nextPageProteins;
    private javax.swing.JLabel pageLabelProteins;
    private javax.swing.JPanel peptidesPanel;
    private javax.swing.JScrollPane peptidesScrollPane;
    private javax.swing.JTable peptidesTable;
    private javax.swing.JButton prevPageProteins;
    private javax.swing.JTree projectTree;
    private javax.swing.JPanel proteinsPanel;
    private javax.swing.JScrollPane proteinsScrollPane;
    private javax.swing.JTable proteinsTable;
    private javax.swing.JPanel psmPanel;
    private javax.swing.JScrollPane psmScrollPane;
    private javax.swing.JTable psmTable;
    // End of variables declaration//GEN-END:variables

    private JFrame mainFrame;
    private ProteinOverviewController proteinOverviewController;
}
