package com.compomics.colims.client.view;

import java.awt.Color;
import java.awt.Frame;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JTextArea;

/**
 *
 * @author Niels Hulstaert
 */
public class StorageMonitoringDialog extends javax.swing.JDialog {

    /**
     * Dialog constructor
     *
     * @param parent the parent frame
     * @param modal the modal boolean
     */
    public StorageMonitoringDialog(final Frame parent, final boolean modal) {
        super(parent, modal);

        initComponents();

        storageQueueScrollPane.getViewport().setOpaque(false);
        errorQueueScrollPane.getViewport().setOpaque(false);
        storedQueueScrollPane.getViewport().setOpaque(false);
        this.getContentPane().setBackground(Color.WHITE);
    }

    public JTable getStorageQueueTable() {
        return storageQueueTable;
    }

    public JTable getErrorQueueTable() {
        return errorQueueTable;
    }

    public JButton getCloseButton() {
        return closeButton;
    }

    public JButton getRefreshButton() {
        return refreshButton;
    }

    public JTable getStoredQueueTable() {
        return storedQueueTable;
    }

    public JTextArea getErrorDetailTextArea() {
        return errorDetailTextArea;
    }        

    public JButton getDeleteStorageErrorButton() {
        return deleteStorageErrorButton;
    }

    public JButton getResendStorageErrorButton() {
        return resendStorageErrorButton;
    }   

    public JButton getDeleteStorageTaskButton() {
        return deleteStorageTaskButton;
    }

    public JButton getPurgeStorageErrorsButton() {
        return purgeStorageErrorsButton;
    }

    public JButton getDeleteStoredTaskButton() {
        return deleteStoredTaskButton;
    }

    public JButton getPurgeStoredTasksButton() {
        return purgeStoredTasksButton;
    }        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        storageMonitoringTabbedPane = new javax.swing.JTabbedPane();
        storageQueuePanel = new javax.swing.JPanel();
        storageQueueScrollPane = new javax.swing.JScrollPane();
        storageQueueTable = new javax.swing.JTable();
        deleteStorageTaskButton = new javax.swing.JButton();
        storedQueuePanel = new javax.swing.JPanel();
        storedQueueScrollPane = new javax.swing.JScrollPane();
        storedQueueTable = new javax.swing.JTable();
        deleteStoredTaskButton = new javax.swing.JButton();
        purgeStoredTasksButton = new javax.swing.JButton();
        exceptionQueuePanel = new javax.swing.JPanel();
        errorQueueScrollPane = new javax.swing.JScrollPane();
        errorQueueTable = new javax.swing.JTable();
        errorDetailLabel = new javax.swing.JLabel();
        errorDetailTextAreaScrollPane = new javax.swing.JScrollPane();
        errorDetailTextArea = new javax.swing.JTextArea();
        deleteStorageErrorButton = new javax.swing.JButton();
        resendStorageErrorButton = new javax.swing.JButton();
        purgeStorageErrorsButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("storage monitoring");

        storageQueuePanel.setOpaque(false);

        storageQueueScrollPane.setOpaque(false);

        storageQueueTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        storageQueueTable.setOpaque(false);
        storageQueueScrollPane.setViewportView(storageQueueTable);

        deleteStorageTaskButton.setText("delete");
        deleteStorageTaskButton.setMaximumSize(new java.awt.Dimension(80, 25));
        deleteStorageTaskButton.setMinimumSize(new java.awt.Dimension(80, 25));
        deleteStorageTaskButton.setPreferredSize(new java.awt.Dimension(80, 25));

        javax.swing.GroupLayout storageQueuePanelLayout = new javax.swing.GroupLayout(storageQueuePanel);
        storageQueuePanel.setLayout(storageQueuePanelLayout);
        storageQueuePanelLayout.setHorizontalGroup(
            storageQueuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(storageQueuePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(storageQueuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(storageQueueScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, storageQueuePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(deleteStorageTaskButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        storageQueuePanelLayout.setVerticalGroup(
            storageQueuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(storageQueuePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(storageQueueScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteStorageTaskButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        storageMonitoringTabbedPane.addTab("storage tasks", storageQueuePanel);

        storedQueuePanel.setOpaque(false);

        storedQueueScrollPane.setOpaque(false);

        storedQueueTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        storedQueueTable.setToolTipText("");
        storedQueueTable.setOpaque(false);
        storedQueueScrollPane.setViewportView(storedQueueTable);

        deleteStoredTaskButton.setText("delete");
        deleteStoredTaskButton.setToolTipText("remove the selected storage error");
        deleteStoredTaskButton.setMaximumSize(new java.awt.Dimension(80, 25));
        deleteStoredTaskButton.setMinimumSize(new java.awt.Dimension(80, 25));
        deleteStoredTaskButton.setPreferredSize(new java.awt.Dimension(80, 25));

        purgeStoredTasksButton.setText("purge");
        purgeStoredTasksButton.setToolTipText("remove all messages (irreversable!)");
        purgeStoredTasksButton.setMaximumSize(new java.awt.Dimension(80, 25));
        purgeStoredTasksButton.setMinimumSize(new java.awt.Dimension(80, 25));
        purgeStoredTasksButton.setPreferredSize(new java.awt.Dimension(80, 25));

        javax.swing.GroupLayout storedQueuePanelLayout = new javax.swing.GroupLayout(storedQueuePanel);
        storedQueuePanel.setLayout(storedQueuePanelLayout);
        storedQueuePanelLayout.setHorizontalGroup(
            storedQueuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(storedQueuePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(storedQueuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(storedQueueScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, storedQueuePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(deleteStoredTaskButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(purgeStoredTasksButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        storedQueuePanelLayout.setVerticalGroup(
            storedQueuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(storedQueuePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(storedQueueScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(storedQueuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteStoredTaskButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(purgeStoredTasksButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        storageMonitoringTabbedPane.addTab("stored tasks", storedQueuePanel);

        exceptionQueuePanel.setOpaque(false);

        errorQueueScrollPane.setOpaque(false);

        errorQueueTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        errorQueueTable.setToolTipText("select a row to see the error details");
        errorQueueTable.setOpaque(false);
        errorQueueScrollPane.setViewportView(errorQueueTable);

        errorDetailLabel.setText("error detail");

        errorDetailTextArea.setEditable(false);
        errorDetailTextArea.setColumns(20);
        errorDetailTextArea.setLineWrap(true);
        errorDetailTextArea.setRows(5);
        errorDetailTextArea.setWrapStyleWord(true);
        errorDetailTextAreaScrollPane.setViewportView(errorDetailTextArea);

        deleteStorageErrorButton.setText("delete");
        deleteStorageErrorButton.setToolTipText("remove the selected storage error");
        deleteStorageErrorButton.setMaximumSize(new java.awt.Dimension(80, 25));
        deleteStorageErrorButton.setMinimumSize(new java.awt.Dimension(80, 25));
        deleteStorageErrorButton.setPreferredSize(new java.awt.Dimension(80, 25));

        resendStorageErrorButton.setText("resend");
        resendStorageErrorButton.setToolTipText("resend the storage error as a storage task");
        resendStorageErrorButton.setMaximumSize(new java.awt.Dimension(80, 25));
        resendStorageErrorButton.setMinimumSize(new java.awt.Dimension(80, 25));
        resendStorageErrorButton.setPreferredSize(new java.awt.Dimension(80, 25));

        purgeStorageErrorsButton.setText("purge");
        purgeStorageErrorsButton.setToolTipText("remove all messages (irreversable!)");
        purgeStorageErrorsButton.setMaximumSize(new java.awt.Dimension(80, 25));
        purgeStorageErrorsButton.setMinimumSize(new java.awt.Dimension(80, 25));
        purgeStorageErrorsButton.setPreferredSize(new java.awt.Dimension(80, 25));

        javax.swing.GroupLayout exceptionQueuePanelLayout = new javax.swing.GroupLayout(exceptionQueuePanel);
        exceptionQueuePanel.setLayout(exceptionQueuePanelLayout);
        exceptionQueuePanelLayout.setHorizontalGroup(
            exceptionQueuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exceptionQueuePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(exceptionQueuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(errorQueueScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
                    .addGroup(exceptionQueuePanelLayout.createSequentialGroup()
                        .addComponent(errorDetailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(errorDetailTextAreaScrollPane)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, exceptionQueuePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(resendStorageErrorButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteStorageErrorButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(purgeStorageErrorsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        exceptionQueuePanelLayout.setVerticalGroup(
            exceptionQueuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exceptionQueuePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(errorQueueScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(errorDetailLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorDetailTextAreaScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(exceptionQueuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteStorageErrorButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resendStorageErrorButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(purgeStorageErrorsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        storageMonitoringTabbedPane.addTab("storage errors", exceptionQueuePanel);

        closeButton.setText("close");
        closeButton.setMaximumSize(new java.awt.Dimension(80, 25));
        closeButton.setMinimumSize(new java.awt.Dimension(80, 25));
        closeButton.setPreferredSize(new java.awt.Dimension(80, 25));

        refreshButton.setText("refresh");
        refreshButton.setMaximumSize(new java.awt.Dimension(80, 25));
        refreshButton.setMinimumSize(new java.awt.Dimension(80, 25));
        refreshButton.setPreferredSize(new java.awt.Dimension(80, 25));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(storageMonitoringTabbedPane)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(storageMonitoringTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JButton deleteStorageErrorButton;
    private javax.swing.JButton deleteStorageTaskButton;
    private javax.swing.JButton deleteStoredTaskButton;
    private javax.swing.JLabel errorDetailLabel;
    private javax.swing.JTextArea errorDetailTextArea;
    private javax.swing.JScrollPane errorDetailTextAreaScrollPane;
    private javax.swing.JScrollPane errorQueueScrollPane;
    private javax.swing.JTable errorQueueTable;
    private javax.swing.JPanel exceptionQueuePanel;
    private javax.swing.JButton purgeStorageErrorsButton;
    private javax.swing.JButton purgeStoredTasksButton;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton resendStorageErrorButton;
    private javax.swing.JTabbedPane storageMonitoringTabbedPane;
    private javax.swing.JPanel storageQueuePanel;
    private javax.swing.JScrollPane storageQueueScrollPane;
    private javax.swing.JTable storageQueueTable;
    private javax.swing.JPanel storedQueuePanel;
    private javax.swing.JScrollPane storedQueueScrollPane;
    private javax.swing.JTable storedQueueTable;
    // End of variables declaration//GEN-END:variables
}
